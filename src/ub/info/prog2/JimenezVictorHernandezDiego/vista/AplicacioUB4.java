package ub.info.prog2.JimenezVictorHernandezDiego.vista;

import java.util.List;
import java.util.ArrayList;
import java.io.File;
import javax.swing.*;
import java.awt.event.*;
import ub.info.prog2.JimenezVictorHernandezDiego.controlador.Controlador;
import ub.info.prog2.utils.ReproException;

/**
 * La classe és el JFrame de la interfície gràfica d'usuari (GUI). 
 * Permet a l'usuari realitzar totes les operacions que ofereix el reproductor.
 */

public class AplicacioUB4 extends javax.swing.JFrame {

    /**
     * Constructor, s'inicialitzen les components i
     * es crea un objecte de tipus controlador
     */
    
    public AplicacioUB4() {
        initComponents();
        controlador = new Controlador(this);
        
        //Cridem al metode tancarReproductor() quan es vol tancar la finestra del JFrame
        this.addWindowListener(new WindowAdapter() { 
             @Override public void windowClosing(WindowEvent we) {tancarReproductor();}});
        
        //Configurem el JDialog per afegir fitxers al repositori
        finestraAfegir = new FrmAfegirFitxerMultimedia(this,true,controlador);
        finestraAfegir.setTitle("Afegir fitxer repositori");
        
        //Configurem el JDialog per informar a l'usuari de les funcionalitats de l'aplicacio
        finestraInformacio = new Informacio(this,true);
        finestraInformacio.setTitle("Informació aplicació");
        finestraInformacio.setLocationRelativeTo(this);
        finestraInformacio.pack();
        finestraInformacio.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAfegirFitxerRepositori = new javax.swing.JButton();
        btnEliminarFitxer = new javax.swing.JButton();
        etRepositori = new javax.swing.JLabel();
        btnPlayFitRepositori = new javax.swing.JButton();
        etPortafolis = new javax.swing.JLabel();
        btnCrearPortafoli = new javax.swing.JButton();
        btnEliminarPortafoli = new javax.swing.JButton();
        btnAfegirFitxerPortafoli = new javax.swing.JButton();
        btnEliminarFitxerPortafoli = new javax.swing.JButton();
        btnPlayPortafoli = new javax.swing.JButton();
        etControlsReproduccio = new javax.swing.JLabel();
        chkBoxReproduccioCiclica = new javax.swing.JCheckBox();
        chkBoxReproduccioReverse = new javax.swing.JCheckBox();
        btnReemprendrePausar = new javax.swing.JButton();
        btnAturar = new javax.swing.JButton();
        btnSaltar = new javax.swing.JButton();
        etDades = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnRecuperar = new javax.swing.JButton();
        btnPlayRepositori = new javax.swing.JButton();
        textPortafoli = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstFitxers = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPortafolis = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstFitxersPortafoli = new javax.swing.JList<>();
        sliderMidaPortafoli = new javax.swing.JSlider();
        etInfoMida = new javax.swing.JLabel();
        etMida = new javax.swing.JLabel();
        etFitxersRepositori = new javax.swing.JLabel();
        etNomPortafoli = new javax.swing.JLabel();
        etLlistaPortafolis = new javax.swing.JLabel();
        etPortafoliSeleccionat = new javax.swing.JLabel();
        btnSortirAplicacio = new javax.swing.JButton();
        cmbBoxPortafolis = new javax.swing.JComboBox<>();
        etFitxerReproduint = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnInformacio = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        textFitxerReproduint = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reproductor UB");
        setLocation(new java.awt.Point(0, 0));
        setMaximumSize(new java.awt.Dimension(892, 580));
        setMinimumSize(new java.awt.Dimension(892, 580));
        setPreferredSize(new java.awt.Dimension(892, 580));
        setResizable(false);
        setSize(new java.awt.Dimension(892, 580));

        btnAfegirFitxerRepositori.setText("Afegir fitxer");
        btnAfegirFitxerRepositori.setMaximumSize(new java.awt.Dimension(150, 23));
        btnAfegirFitxerRepositori.setMinimumSize(new java.awt.Dimension(150, 23));
        btnAfegirFitxerRepositori.setPreferredSize(new java.awt.Dimension(150, 23));
        btnAfegirFitxerRepositori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirFitxerRepositoriActionPerformed(evt);
            }
        });

        btnEliminarFitxer.setText("Eliminar fitxers");
        btnEliminarFitxer.setEnabled(false);
        btnEliminarFitxer.setMaximumSize(new java.awt.Dimension(150, 23));
        btnEliminarFitxer.setMinimumSize(new java.awt.Dimension(150, 23));
        btnEliminarFitxer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFitxerActionPerformed(evt);
            }
        });

        etRepositori.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        etRepositori.setText("REPOSITORI");
        etRepositori.setAlignmentY(0.8F);

        btnPlayFitRepositori.setText("Reproduir fitxer");
        btnPlayFitRepositori.setEnabled(false);
        btnPlayFitRepositori.setMaximumSize(new java.awt.Dimension(150, 23));
        btnPlayFitRepositori.setMinimumSize(new java.awt.Dimension(150, 23));
        btnPlayFitRepositori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayFitRepositoriActionPerformed(evt);
            }
        });

        etPortafolis.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        etPortafolis.setText("PORTAFOLIS");

        btnCrearPortafoli.setText("Crear portafoli");
        btnCrearPortafoli.setEnabled(false);
        btnCrearPortafoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearPortafoliActionPerformed(evt);
            }
        });

        btnEliminarPortafoli.setText("Eliminar portafoli");
        btnEliminarPortafoli.setEnabled(false);
        btnEliminarPortafoli.setMaximumSize(new java.awt.Dimension(133, 23));
        btnEliminarPortafoli.setMinimumSize(new java.awt.Dimension(133, 23));
        btnEliminarPortafoli.setPreferredSize(new java.awt.Dimension(133, 23));
        btnEliminarPortafoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPortafoliActionPerformed(evt);
            }
        });

        btnAfegirFitxerPortafoli.setText("Afegir fitxer portafoli");
        btnAfegirFitxerPortafoli.setEnabled(false);
        btnAfegirFitxerPortafoli.setMaximumSize(new java.awt.Dimension(140, 23));
        btnAfegirFitxerPortafoli.setMinimumSize(new java.awt.Dimension(140, 23));
        btnAfegirFitxerPortafoli.setPreferredSize(new java.awt.Dimension(140, 23));
        btnAfegirFitxerPortafoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirFitxerPortafoliActionPerformed(evt);
            }
        });

        btnEliminarFitxerPortafoli.setText("Eliminar fitxer portafoli");
        btnEliminarFitxerPortafoli.setEnabled(false);
        btnEliminarFitxerPortafoli.setMaximumSize(new java.awt.Dimension(140, 23));
        btnEliminarFitxerPortafoli.setMinimumSize(new java.awt.Dimension(140, 23));
        btnEliminarFitxerPortafoli.setPreferredSize(new java.awt.Dimension(140, 23));
        btnEliminarFitxerPortafoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFitxerPortafoliActionPerformed(evt);
            }
        });

        btnPlayPortafoli.setText("Reproduir portafoli");
        btnPlayPortafoli.setEnabled(false);
        btnPlayPortafoli.setMaximumSize(new java.awt.Dimension(140, 23));
        btnPlayPortafoli.setMinimumSize(new java.awt.Dimension(140, 23));
        btnPlayPortafoli.setPreferredSize(new java.awt.Dimension(140, 23));
        btnPlayPortafoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayPortafoliActionPerformed(evt);
            }
        });

        etControlsReproduccio.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        etControlsReproduccio.setText("CONTROL DE LA REPRODUCCIÓ");

        chkBoxReproduccioCiclica.setText("Reproducció cíclica");
        chkBoxReproduccioCiclica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxReproduccioCiclicaActionPerformed(evt);
            }
        });

        chkBoxReproduccioReverse.setText("Reproducció reverse");
        chkBoxReproduccioReverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxReproduccioReverseActionPerformed(evt);
            }
        });

        btnReemprendrePausar.setText("Reemprendre/Pausar");
        btnReemprendrePausar.setEnabled(false);
        btnReemprendrePausar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReemprendrePausarActionPerformed(evt);
            }
        });

        btnAturar.setText("Aturar");
        btnAturar.setEnabled(false);
        btnAturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAturarActionPerformed(evt);
            }
        });

        btnSaltar.setText("Saltar");
        btnSaltar.setEnabled(false);
        btnSaltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaltarActionPerformed(evt);
            }
        });

        etDades.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        etDades.setText("GUARDAR/RECUPERAR DADES");

        btnGuardar.setToolTipText("");
        btnGuardar.setLabel("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnRecuperar.setLabel("Recuperar");
        btnRecuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecuperarActionPerformed(evt);
            }
        });

        btnPlayRepositori.setText("Reproduir repositori");
        btnPlayRepositori.setEnabled(false);
        btnPlayRepositori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayRepositoriActionPerformed(evt);
            }
        });

        textPortafoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPortafoliActionPerformed(evt);
            }
        });

        lstFitxers.setToolTipText("");
        lstFitxers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstFitxersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstFitxers);

        lstPortafolis.setToolTipText("");
        lstPortafolis.setEnabled(false);
        jScrollPane2.setViewportView(lstPortafolis);

        lstFitxersPortafoli.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstFitxersPortafoli.setToolTipText("");
        lstFitxersPortafoli.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstFitxersPortafoliValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstFitxersPortafoli);

        sliderMidaPortafoli.setMajorTickSpacing(10);
        sliderMidaPortafoli.setMinorTickSpacing(5);
        sliderMidaPortafoli.setPaintLabels(true);
        sliderMidaPortafoli.setPaintTicks(true);
        sliderMidaPortafoli.setValue(100);
        sliderMidaPortafoli.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMidaPortafoliStateChanged(evt);
            }
        });

        etInfoMida.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        etInfoMida.setText("Mida del portafoli:");

        etMida.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        etMida.setText("Mida per defecte: 100");

        etFitxersRepositori.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        etFitxersRepositori.setText("Fitxers al repositori:");

        etNomPortafoli.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        etNomPortafoli.setText("Nom del portafoli:");

        etLlistaPortafolis.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        etLlistaPortafolis.setText("Portafolis:");

        etPortafoliSeleccionat.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        etPortafoliSeleccionat.setText("Portafoli seleccionat:");
        etPortafoliSeleccionat.setToolTipText("");

        btnSortirAplicacio.setText("Tancar l'aplicació");
        btnSortirAplicacio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortirAplicacioActionPerformed(evt);
            }
        });

        cmbBoxPortafolis.setEnabled(false);
        cmbBoxPortafolis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBoxPortafolisActionPerformed(evt);
            }
        });

        etFitxerReproduint.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        etFitxerReproduint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etFitxerReproduint.setText("S'està reproduint el fitxer:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setText("INFORMACIÓ APLICACIÓ/SORTIR");

        btnInformacio.setText("Mostrar informació");
        btnInformacio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInformacioActionPerformed(evt);
            }
        });

        textFitxerReproduint.setEditable(false);
        textFitxerReproduint.setColumns(20);
        textFitxerReproduint.setRows(5);
        textFitxerReproduint.setMaximumSize(new java.awt.Dimension(164, 94));
        textFitxerReproduint.setMinimumSize(new java.awt.Dimension(164, 94));
        textFitxerReproduint.setOpaque(false);
        jScrollPane4.setViewportView(textFitxerReproduint);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etPortafolis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnReemprendrePausar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAturar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSaltar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(sliderMidaPortafoli, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnPlayPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(etLlistaPortafolis)
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnEliminarPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(5, 5, 5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnEliminarFitxerPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAfegirFitxerPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(etPortafoliSeleccionat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbBoxPortafolis, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(etRepositori, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etFitxersRepositori, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnEliminarFitxer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAfegirFitxerRepositori, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                    .addComponent(btnPlayRepositori, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPlayFitRepositori, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etInfoMida)
                                .addGap(128, 128, 128)
                                .addComponent(etMida))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(etNomPortafoli)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btnCrearPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etControlsReproduccio)
                                    .addComponent(jLabel1)
                                    .addComponent(etDades, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(etFitxerReproduint, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnSortirAplicacio, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnInformacio, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRecuperar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(559, 559, 559)
                .addComponent(chkBoxReproduccioCiclica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkBoxReproduccioReverse)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etDades)
                    .addComponent(etRepositori))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPlayFitRepositori, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(btnPlayRepositori, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAfegirFitxerRepositori, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(btnEliminarFitxer, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRecuperar)
                        .addGap(17, 17, 17)
                        .addComponent(etControlsReproduccio)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkBoxReproduccioReverse)
                            .addComponent(chkBoxReproduccioCiclica)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addComponent(etFitxersRepositori, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnReemprendrePausar)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAturar)
                            .addComponent(btnSaltar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etFitxerReproduint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etPortafolis)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etNomPortafoli)
                            .addComponent(textPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCrearPortafoli))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etMida)
                            .addComponent(etInfoMida))
                        .addGap(20, 20, 20)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sliderMidaPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(etPortafoliSeleccionat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbBoxPortafolis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(etLlistaPortafolis))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnPlayPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEliminarFitxerPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAfegirFitxerPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEliminarPortafoli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInformacio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSortirAplicacio)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Es pausa o es reempren la reproduccio, depenent
     * de l'estat actual d'aquesta
     * 
     * @param evt Listener de l'event
     */
    
    private void btnReemprendrePausarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReemprendrePausarActionPerformed
        try {
            if (btnReemprendrePausar.getText().equals("Pausar")) {
                controlador.pauseReproduccio();
                btnReemprendrePausar.setText("Reemprendre");
            } else {
                controlador.resumeReproduccio();
                btnReemprendrePausar.setText("Pausar");
            }
        } catch (ReproException e) {
            showReproException(e);
        }
    }//GEN-LAST:event_btnReemprendrePausarActionPerformed

    /**
     * S'obre un JDialog per afegir un fitxer multimedia al repositori.
     * 
     * @param evt Listener de l'event
     */
    
    private void btnAfegirFitxerRepositoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirFitxerRepositoriActionPerformed
        finestraAfegir.setLocationRelativeTo(this);
        finestraAfegir.pack();
        finestraAfegir.setVisible(true);
        actualitzarRepositori();
    }//GEN-LAST:event_btnAfegirFitxerRepositoriActionPerformed

    /**
     * Es guarden les dades a l'arxiu escollit per l'usuari
     * 
     * @param evt Listener de l'event
     */
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        File fitxer;
        JFileChooser seleccio = new JFileChooser();
        int option = seleccio.showSaveDialog(this);
        
        if (option == JFileChooser.APPROVE_OPTION) {
            fitxer = seleccio.getSelectedFile();
            option = JOptionPane.showConfirmDialog(this,"Guardar les dades actuals a " + fitxer.getName() + "?","Missatge de confirmació",0);
        
            if (option == JOptionPane.YES_OPTION) {
                try {
                    controlador.saveDades(fitxer.getAbsolutePath());
                    JOptionPane.showMessageDialog(this, "Dades guardades amb èxit!", "Missatge de finalització", 1);
                } catch (ReproException e) {
                    showReproException(e);
                }
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * Es recuperen les dades de l'arxiu escollit per l'usuari
     * 
     * @param evt Listener de l'event
     */
    
    private void btnRecuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecuperarActionPerformed
        File fitxer;
        JFileChooser seleccio = new JFileChooser();
        int option = seleccio.showOpenDialog(this);
        
        if (option == JFileChooser.APPROVE_OPTION) {
            fitxer = seleccio.getSelectedFile();
            option = JOptionPane.showConfirmDialog(this,"Recuperar les dades de " + fitxer.getName() + "? Perdràs les dades actuals.","Missatge de confirmació",0);
        
            if (option == JOptionPane.YES_OPTION) {
                try {
                    controlador.loadDades(fitxer.getAbsolutePath());
                    
                    chkBoxReproduccioCiclica.setSelected(controlador.getCiclic());
                    chkBoxReproduccioReverse.setSelected(controlador.getReverse());

                    actualitzarRepositori();
                    actualitzarPortafolis();
                    actualitzarCompPortafoli();

                    JOptionPane.showMessageDialog(this, "Dades carregades amb èxit!", "Missatge de finalització", 1);
                } catch (ReproException e) {
                    showReproException(e);
                }
            }
        }
    }//GEN-LAST:event_btnRecuperarActionPerformed

    /**
     * S'atura la reproduccio
     * 
     * @param evt Listener de l'event
     */
    
    private void btnAturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAturarActionPerformed
        try {
            setEnabledReproComponents(false);
            controlador.stopReproduccio();
        } catch (ReproException e) {
            showReproException(e);
        }
    }//GEN-LAST:event_btnAturarActionPerformed

    /**
     * Es salta al següent fitxer en la reproduccio
     * 
     * @param evt Listener de l'event
     */
    
    private void btnSaltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaltarActionPerformed
        try {
            controlador.jumpReproduccio();
        } catch (ReproException e) {
            showReproException(e);
        }
    }//GEN-LAST:event_btnSaltarActionPerformed

    /**
     * Es reprodueixen tots els fitxers del repositori
     * 
     * @param evt Listener de l'event
     */
    
    private void btnPlayRepositoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayRepositoriActionPerformed
        try {
            setEnabledReproComponents(true);
            controlador.playLlista();
        } catch (ReproException e) {
            setEnabledReproComponents(false);
            showReproException(e);
        }
    }//GEN-LAST:event_btnPlayRepositoriActionPerformed

    /**
     * S'activa/desactiva el mode ciclic de reproduccio
     * 
     * @param evt Listener de l'event
     */
    
    private void chkBoxReproduccioCiclicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxReproduccioCiclicaActionPerformed
        controlador.modeCiclic(chkBoxReproduccioCiclica.isSelected());
    }//GEN-LAST:event_chkBoxReproduccioCiclicaActionPerformed

    /**
     * S'activa/desactiva el mode reverse de reproduccio
     * 
     * @param evt Listener de l'event
     */
    
    private void chkBoxReproduccioReverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxReproduccioReverseActionPerformed
        controlador.modeReverse(chkBoxReproduccioReverse.isSelected());
    }//GEN-LAST:event_chkBoxReproduccioReverseActionPerformed

    /**
     * Es crea un nou portafoli
     * 
     * @param evt Listener de l'event
     */
    
    private void btnCrearPortafoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearPortafoliActionPerformed
        String titol = textPortafoli.getText();
        int mida = sliderMidaPortafoli.getValue();
            
        try {
            //Creem un portafoli amb el titol i la mida escollits
            controlador.addPortafoli(titol, mida);
            actualitzarPortafolis();
            cmbBoxPortafolis.setSelectedItem(titol);
            actualitzarCompPortafoli();
            
            //Restablim l'estat per defecte de les components
            textPortafoli.setText("");
            btnCrearPortafoli.setEnabled(false);
            sliderMidaPortafoli.setValue(100);
            etMida.setText("Mida per defecte: 100");
            
            JOptionPane.showMessageDialog(this, "Portafoli " + titol + " creat amb èxit!", "Missatge de finalització", 1);
        } catch (ReproException e) {
            showReproException(e);
        }
    }//GEN-LAST:event_btnCrearPortafoliActionPerformed

    /**
     * S'elimina el portafoli seleccionat
     * 
     * @param evt Listener de l'event
     */
    
    private void btnEliminarPortafoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPortafoliActionPerformed
        int opcio = JOptionPane.showConfirmDialog(this, "Estàs segur que vols eliminar el portafoli?", "Missatge de confirmació", 0);
        
        if (opcio == JOptionPane.YES_OPTION) {
            String titol = (String) cmbBoxPortafolis.getSelectedItem();
            try {
                controlador.removePortafoli(titol);
                actualitzarPortafolis();
                actualitzarCompPortafoli();
                JOptionPane.showMessageDialog(this,"Portafoli eliminat amb èxit!","Missatge de finalització",1);
            } catch (ReproException e) {
                showReproException(e);
            }
        }
    }//GEN-LAST:event_btnEliminarPortafoliActionPerformed

    /**
     * S'elimina el fitxer seleccionat del portafoli seleccionat
     * 
     * @param evt Listener de l'event
     */
    
    private void btnEliminarFitxerPortafoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFitxerPortafoliActionPerformed
        String titol = (String) cmbBoxPortafolis.getSelectedItem();
        int index = lstFitxersPortafoli.getSelectedIndex();
        
        try {
            controlador.removeFitxer(titol, index);
            actualitzarCompPortafoli();
            JOptionPane.showMessageDialog(this, "Fitxer eliminat exitosament!", "Missatge de finalització",1);
        } catch (ReproException e) {
            showReproException(e);
        }
    }//GEN-LAST:event_btnEliminarFitxerPortafoliActionPerformed

    /**
     * Es reprodueix el portafoli seleccionat
     * 
     * @param evt Listener de l'event
     */
    
    private void btnPlayPortafoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayPortafoliActionPerformed
        String titol = (String) cmbBoxPortafolis.getSelectedItem();
        
        try {
            setEnabledReproComponents(true);
            controlador.playLlista(titol);
        } catch (ReproException e) {
            setEnabledReproComponents(false);
            showReproException(e);
        }
    }//GEN-LAST:event_btnPlayPortafoliActionPerformed

    /**
     * Es reprodueix el fitxer del repositori seleccionat
     * 
     * @param evt Listener de l'event
     */
    
    private void btnPlayFitRepositoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayFitRepositoriActionPerformed
        if (lstFitxers.getSelectedIndices().length > 1)
            JOptionPane.showMessageDialog(this, "Selecciona només un fitxer per reproduir.", "Missatge d'avís", 2);
        else {
            int index = lstFitxers.getSelectedIndex();

            try {
                setEnabledReproComponents(true);
                controlador.playFitxer(index);
            } catch (ReproException e) {
                setEnabledReproComponents(false);
                showReproException(e);
            }
        }
    }//GEN-LAST:event_btnPlayFitRepositoriActionPerformed

    /**
     * S'eliminen els fitxers seleccionats del repositori
     * 
     * @param evt Listener de l'event
     */
    
    private void btnEliminarFitxerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFitxerActionPerformed
        int opcio = JOptionPane.showConfirmDialog(this, "Estàs segur que vols eliminar els fitxers seleccionats?", "Missatge de confirmació", 0);
        
        if (opcio == JOptionPane.YES_OPTION) {
            int[] index = lstFitxers.getSelectedIndices();

            try {
                //En ordre descendent per no perdre l'index actual al repositori
                for (int i = index.length-1; i >= 0; i--)
                    controlador.removeFitxer(index[i]);
                
                actualitzarRepositori();
                //Actualitzem tambe les components relacionades amb el portafoli 
                //selecciont per si el fitxer que hem eliminat es troba en aquest
                actualitzarCompPortafoli();
                
                JOptionPane.showMessageDialog(this,"Fitxers eliminats amb èxit!","Missatge de finalització",1);
            } catch (ReproException e) {
                showReproException(e);
            }
        }
    }//GEN-LAST:event_btnEliminarFitxerActionPerformed

    /**
     * S'afegeix el fitxer del repositori seleccionat al portafoli seleccionat
     * 
     * @param evt Listener de l'event
     */
    
    private void btnAfegirFitxerPortafoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirFitxerPortafoliActionPerformed
        if (lstFitxers.getSelectedIndices().length > 1)
            JOptionPane.showMessageDialog(this,"Selecciona només un fitxer del repositori!","Missatge d'avís",2);
        else {
            int index = lstFitxers.getSelectedIndex();
            String titol = (String) cmbBoxPortafolis.getSelectedItem();

            try {
                controlador.addFitxer(titol, index);
                actualitzarCompPortafoli();
                JOptionPane.showMessageDialog(this, "Fitxer afegit al portafoli " + titol + " amb èxit!", "Missatge de finalització", 1);
            } catch (ReproException e) {
                showReproException(e);
            }
        }
    }//GEN-LAST:event_btnAfegirFitxerPortafoliActionPerformed

    /**
     * S'activen o desactiven les components relacionades amb els
     * fitxers del repositori depenent de si algun esta seleccionat o no
     * 
     * @param evt Listener de l'event
     */
    
    private void lstFitxersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstFitxersValueChanged
        boolean bool = lstFitxers.isSelectionEmpty();
        
        btnEliminarFitxer.setEnabled(!bool);
        btnPlayFitRepositori.setEnabled(!bool);
        btnAfegirFitxerPortafoli.setEnabled(!bool && cmbBoxPortafolis.getSelectedIndex() != -1);
    }//GEN-LAST:event_lstFitxersValueChanged

    /**
     * Es canvia el text de l'etiqueta que mostra la mida
     * escollida per al portafoli que es vol crear
     * 
     * @param evt Listener de l'event
     */
    
    private void sliderMidaPortafoliStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMidaPortafoliStateChanged
        etMida.setText("Mida escollida: " + sliderMidaPortafoli.getValue());
    }//GEN-LAST:event_sliderMidaPortafoliStateChanged

    /**
     * Es desactiva el boto d'eliminar un fitxer del portafoli si
     * no hi ha cap fitxer seleccionat a lstFitxersPortafoli
     * 
     * @param evt Listener de l'event
     */
    
    private void lstFitxersPortafoliValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstFitxersPortafoliValueChanged
        btnEliminarFitxerPortafoli.setEnabled(!lstFitxersPortafoli.isSelectionEmpty());
    }//GEN-LAST:event_lstFitxersPortafoliValueChanged

    /**
     * S'activa/desactiva el boto de crear un portafoli segons si hi ha 
     * text al camp on s'especifica el nom d'aquest nou portafoli
     * 
     * @param evt Listener de l'event
     */
    
    private void textPortafoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPortafoliActionPerformed
        btnCrearPortafoli.setEnabled(!textPortafoli.getText().isEmpty());
    }//GEN-LAST:event_textPortafoliActionPerformed

    private void btnSortirAplicacioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortirAplicacioActionPerformed
        tancarReproductor();
    }//GEN-LAST:event_btnSortirAplicacioActionPerformed

    private void btnInformacioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInformacioActionPerformed
        finestraInformacio.setLocationRelativeTo(this);
        finestraInformacio.pack();
        finestraInformacio.setVisible(true);
    }//GEN-LAST:event_btnInformacioActionPerformed

    private void cmbBoxPortafolisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBoxPortafolisActionPerformed
        actualitzarCompPortafoli();
    }//GEN-LAST:event_cmbBoxPortafolisActionPerformed

    /**
     * S'omple una jList amb els elements d'una List
     * 
     * @param list  llista a guardar
     * @param jList JList on guardar la llista
     */
    
    private void omplirLlista(List<String> list, javax.swing.JList<String> jList) {
        DefaultListModel model = new DefaultListModel();
        model.clear();
        for (String item: list)
            model.addElement(item);
        jList.setModel(model);
    }
    
    /**
     * S'omple una JComboBox amb els elements d'una List
     * 
     * @param list  llista a guardar
     * @param box JComboBox on guardar la llista
     */
    
    private void omplirCmbBox(List<String> list, javax.swing.JComboBox box) {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        for (String item: list)
            model.addElement(item);
        box.setModel(model);
    }
    
    /**
     * S'actualitza la informacio que es mostra sobre el repositori
     */
    
    private void actualitzarRepositori() {
        omplirLlista(controlador.showRepositori(),lstFitxers);
        
        boolean buit = lstFitxers.getModel().getSize() == 0;
        
        btnPlayRepositori.setEnabled(!buit);
        
        if (buit) {
            btnEliminarFitxer.setEnabled(false);
            btnPlayFitRepositori.setEnabled(false);
        }
    }
    
    /**
     * S'actualitza la informacio que es mostra sobre els portafolis
     */
    
    private void actualitzarPortafolis() {
        List<String> list = controlador.showPortafolis();
        omplirLlista(list,lstPortafolis);
        omplirCmbBox(list,cmbBoxPortafolis);
    }
    
    /**
     * S'actualitza la informacio de les components relacionades amb el portafoli seleccionat
     */
    
    private void actualitzarCompPortafoli() {
        boolean seleccio = cmbBoxPortafolis.getSelectedIndex() != -1, empty = lstPortafolis.getModel().getSize() == 0;
        List<String> list;
        
        //Si no hi ha seleccionat cap portafoli, selecciona el primer per defecte
        if (!seleccio && !empty)
            cmbBoxPortafolis.setSelectedIndex(0);
        
        try {
            //La llista que es mostrara sera la del portafoli seleccionat o una llista buida no hi ha portafolis
            list = empty? new ArrayList() : controlador.showPortafoli((String)cmbBoxPortafolis.getSelectedItem());
            omplirLlista(list, lstFitxersPortafoli);
        } catch (ReproException e) {
            showReproException(e);
        } finally {
            //Activa els components si hi ha portafolis
            //o els desactiva si no n'hi ha 
            cmbBoxPortafolis.setEnabled(!empty);
            btnPlayPortafoli.setEnabled(!empty && lstFitxersPortafoli.getModel().getSize() != 0);
            btnEliminarPortafoli.setEnabled(!empty);

            //Ja que estem modificant el portafoli que es mostra, no hi haura cap fitxer seleccionat per esborrar
            btnEliminarFitxerPortafoli.setEnabled(false);

            //Permetem que s'afegeixin fitxers al portafoli seleccionat si hi ha algun fitxer seleccionat del repositori
            btnAfegirFitxerPortafoli.setEnabled(!empty && lstFitxers.getSelectedIndex() != -1);
        }
    }
    
    /**
     * Activa/desactiva els elements de control de la reproduccio
     * 
     * @param bool activar/desactivar
     */
    
    public void setEnabledReproComponents(boolean bool) {
        if (!bool) {
            btnReemprendrePausar.setText("Reemprendre/Pausar");
            setTxtFitxerReproduint("");
        } else
            btnReemprendrePausar.setText("Pausar");
        
        btnReemprendrePausar.setEnabled(bool);
        btnAturar.setEnabled(bool);
        btnSaltar.setEnabled(bool);
    }
    
    /**
     * Actualitza el text on es mostra el fitxer que s'esta reproduint
     * 
     * @param s informacio del fitxer que s'esta reproduint
     */
    
    public void setTxtFitxerReproduint(String s) {
        textFitxerReproduint.setText(s);
    }
    
    /**
     * Mostra un JOptionPane d'error per una ReproException produida
     * 
     * @param e ReproException produida
     */
    
    private void showReproException(ReproException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "ReproException", 0);
    }
    
    /**
     * Confirma si l'usuari vol tancar el reproductor i, si es el cas, finalitza el programa
     */
    
    private void tancarReproductor() {
        int option = JOptionPane.showConfirmDialog(this, "Estàs segur que vols sortir? Perdràs les dades del reproductor que no hagis guardat.","Missatge de confirmació",0);
        
        if (option == JOptionPane.YES_OPTION)
            System.exit(0);
    }
    
    /**
     * Atributs
     */
    
    private final Controlador controlador;
    private final FrmAfegirFitxerMultimedia finestraAfegir;
    private final Informacio finestraInformacio;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAfegirFitxerPortafoli;
    private javax.swing.JButton btnAfegirFitxerRepositori;
    private javax.swing.JButton btnAturar;
    private javax.swing.JButton btnCrearPortafoli;
    private javax.swing.JButton btnEliminarFitxer;
    private javax.swing.JButton btnEliminarFitxerPortafoli;
    private javax.swing.JButton btnEliminarPortafoli;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnInformacio;
    private javax.swing.JButton btnPlayFitRepositori;
    private javax.swing.JButton btnPlayPortafoli;
    private javax.swing.JButton btnPlayRepositori;
    private javax.swing.JButton btnRecuperar;
    private javax.swing.JButton btnReemprendrePausar;
    private javax.swing.JButton btnSaltar;
    private javax.swing.JButton btnSortirAplicacio;
    private javax.swing.JCheckBox chkBoxReproduccioCiclica;
    private javax.swing.JCheckBox chkBoxReproduccioReverse;
    private javax.swing.JComboBox<String> cmbBoxPortafolis;
    private javax.swing.JLabel etControlsReproduccio;
    private javax.swing.JLabel etDades;
    private javax.swing.JLabel etFitxerReproduint;
    private javax.swing.JLabel etFitxersRepositori;
    private javax.swing.JLabel etInfoMida;
    private javax.swing.JLabel etLlistaPortafolis;
    private javax.swing.JLabel etMida;
    private javax.swing.JLabel etNomPortafoli;
    private javax.swing.JLabel etPortafoliSeleccionat;
    private javax.swing.JLabel etPortafolis;
    private javax.swing.JLabel etRepositori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> lstFitxers;
    private javax.swing.JList<String> lstFitxersPortafoli;
    private javax.swing.JList<String> lstPortafolis;
    private javax.swing.JSlider sliderMidaPortafoli;
    private javax.swing.JTextArea textFitxerReproduint;
    private javax.swing.JTextField textPortafoli;
    // End of variables declaration//GEN-END:variables
}